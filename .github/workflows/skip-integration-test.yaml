# This is a "dummy" workflow that should only run when the actual integration test does not need to run, for example on
# changes to Markdown (.md) files.
# Why is this necessary?
# A status check set as "required" in the GitHub web interface will block an outstanding pull request from being merged
# until the status check has passed. This is also the case even if the required status check will not run due to the
# proposed file changes not matching the trigger of the status check.
# To circumvent this GitHub Actions limitation, this dummy workflow:
#   - is triggered on whatever path patterns that the actual integration test is NOT triggered on,
#   - performs no actual long-running work.
# See: https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/troubleshooting-required-status-checks#handling-skipped-but-required-checks.
name: Integration Test

on:
  pull_request:
    types: [opened, reopened, synchronize]
    # NOTE: the `paths-ignore` should always mimic the `paths` triggers of the actual integration test.
    paths-ignore:
      # Do not trigger on changes in `./src` except for changes in Markdown files.
      - 'src/**'
      - '!src/**.md'
      # Do not trigger on any change to the unit tests.
      - 'tests/**/*.py'
      # Do not trigger on any change to dependencies.
      - 'pyproject.toml'
      - 'requirements**.txt'
      # Do not trigger on any change to the (building of the) container image.
      - 'Dockerfile'
      - '.dockerignore'
      # Do not trigger on any change to the GitHub Actions workflows.
      - '.github/workflows/**.yaml'

defaults:
  run:
    shell: bash

jobs:
  # Invoke a dummy CodeQL Analysis that does nothing.
  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    steps:
      - run: echo "No CodeQL Analysis required"

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    steps:
      - run: echo "No integration test required"
